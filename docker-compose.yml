version: "3.3"

volumes:

  # External HD #1
  # (credentials stored in .env file)
  external-hd1:
    driver: local
    driver_opts:
      type: cifs
      o: username=${EXTERNAL_HD1_USERNAME},password=${EXTERNAL_HD1_PASSWORD},uid=${USER_PUID},gid=${USER_PGID},iocharset=utf8,file_mode=0777,dir_mode=0777
      device: "//192.168.0.254/Seagate-2To"

services:

  # ==========================================================================
  # Transmission-OpenVPN service
  # => torrent server secured by VPN connection
  transmission-openvpn:
    image: haugene/transmission-openvpn:latest
    container_name: transmission-openvpn
    cap_add:
      # Admin credentials for docker container
      - NET_ADMIN
    environment:
      - CREATE_TUN_DEVICE=true
      # OpenVPN settings
      - OPENVPN_PROVIDER=PIA
      # OPENVPN_CONFIG: comma separated list allowed, with random selection at startup
      - OPENVPN_CONFIG=France
      - OPENVPN_OPTS=--inactive 3600 --ping 10 --ping-exit 60
      # OpenVPN credentials to connect to VPN (credentials stored in .env file)
      - OPENVPN_USERNAME=${OPENVPN_USERNAME}
      - OPENVPN_PASSWORD=${OPENVPN_PASSWORD}
      # Transmission dirs
      - TRANSMISSION_HOME=/data/transmission-home
      - TRANSMISSION_DOWNLOAD_DIR=/storage/complete
      - TRANSMISSION_INCOMPLETE_DIR_ENABLED=false
      - TRANSMISSION_INCOMPLETE_DIR=/storage/incomplete
      - TRANSMISSION_WATCH_DIR_ENABLED=true
      - TRANSMISSION_WATCH_DIR=/storage/watch
      # Transmission download / uploads settings
      - TRANSMISSION_DOWNLOAD_QUEUE_ENABLED=true
      - TRANSMISSION_DOWNLOAD_QUEUE_SIZE=50
      - TRANSMISSION_SPEED_LIMIT_UP_ENABLED=true
      - TRANSMISSION_SPEED_LIMIT_UP=50
      # Transmission Web UI: kettu, combustion, transmission-web-control
      - TRANSMISSION_WEB_UI=transmission-web-control
      # Enable HTTP proxy
      - WEBPROXY_ENABLED=true
      - WEBPROXY_PORT=8789
      # Firewall and routes (block non VPN traffic)
      - DROP_DEFAULT_ROUTE=true
      # Firewall not working anymore with docker image v3 / new PIA servers ?
      # - ENABLE_UFW=true
      # - UFW_ALLOW_GW_NET=true
      # - UFW_EXTRA_PORTS=
      # - UFW_DISABLE_IPTABLES_REJECT=false
      # Network settings
      - LOCAL_NETWORK=192.168.0.0/24
      # User from docker host to impersonate in container (configured in .env file)
      - PUID=${USER_PUID}
      - PGID=${USER_PGID}
    volumes:
      # Sync time with docker host
      - /etc/localtime:/etc/localtime:ro
      # Configuration dir
      - /shares/P2P/tools/transmission:/data/transmission-home
      # Storage dirs
      - /shares/P2P/incomplete:/storage/incomplete
      - /shares/P2P/complete:/storage/complete
      - /shares/P2P/watch:/storage/watch
    ports:
      # Transmission Web UI port
      - 9091:9091
      # HTTP Proxy port
      - 8789:8789
    restart: always

  # ==========================================================================
  # Medusa service
  # => TV shows manager and auto-downloader, connected to torrent server
  medusa:
    image: linuxserver/medusa:latest
    container_name: medusa
    dns:
      # Public DNS
      - 8.8.8.8
      - 8.8.4.4
    environment:
      # User from docker host to impersonate in container (configured in .env file)
      - PUID=${USER_PUID}
      - PGID=${USER_PGID}
    volumes:
      # Sync time with docker host
      - /etc/localtime:/etc/localtime:ro
      # Configuration dir
      - /shares/P2P/tools/medusa:/config
      # Storage dirs
      - /shares/P2P/complete/medusa:/storage/complete/medusa
      - /shares/Data/Series:/storage/Series
      - external-hd1:/storage/_hd1
    ports:
      # Medusa Web UI port
      - 8081:8081
    restart: always

  # ==========================================================================
  # CouchPotato service
  # => Movies manager and auto-downloader, connected to torrent server
  couchpotato:
    image: linuxserver/couchpotato:latest
    container_name: couchpotato
    dns:
      # Public DNS
      - 8.8.8.8
      - 8.8.4.4
    environment:
      # User from docker host to impersonate in container (configured in .env file)
      - PUID=${USER_PUID}
      - PGID=${USER_PGID}
    volumes:
      # Sync time with docker host
      - /etc/localtime:/etc/localtime:ro
      # Configuration dir
      - /shares/P2P/tools/couchpotato:/config
      # Storage dirs
      - /shares/P2P/complete/couchpotato:/storage/complete/couchpotato
      - /shares/Data/Films:/storage/Films
      - external-hd1:/storage/_hd1
    ports:
      # CouchPotato Web UI port
      - 5050:5050
    restart: always
  
  # ==========================================================================
  # nginx service
  # => Reverse proxy, used to expose services as HTTPS with SSL certificates and basic authentication
  nginx:
    image: nginx:latest
    container_name: nginx
    dns:
      # Public DNS
      - 8.8.8.8
      - 8.8.4.4
    volumes:
      # Sync time with docker host
      - /etc/localtime:/etc/localtime:ro
      # Configuration file
      - /shares/P2P/tools/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # Password file (use 'configurator' docker container to generate)
      - /shares/P2P/tools/nginx/passwords:/etc/nginx/passwords:ro
      # Logs dir
      - /shares/P2P/tools/nginx/logs:/var/log/nginx
      # SSL certificates
      - /shares/P2P/tools/ssl/ahuh.crt:/etc/nginx/certs/ssl.crt:ro
      - /shares/P2P/tools/ssl/ahuh.key:/etc/nginx/certs/ssl.key:ro
    ports:
      # CouchPotato external port
      - 44450:44450
      # Medusa external port
      - 44481:44481
      # Transmission external port      
      - 44491:44491
    # User from docker host to impersonate in container (configured in .env file)
    user: "${USER_PUID}:${USER_PGID}"
    restart: always

  # ==========================================================================
  # MiniDLNA service
  # => UPnP / DLNA service, used to publish media files on the local network
  minidlna:
    image: vladgh/minidlna:latest
    container_name: minidlna
    network_mode: "host"
    environment:
      # MiniDLNA settings
      - MINIDLNA_FRIENDLY_NAME=ahuh-nas
      - MINIDLNA_MEDIA_DIR=/storage
    volumes:
      # Sync time with docker host
      - /etc/localtime:/etc/localtime:ro
      # Configuration dir
      - /shares/P2P/tools/minidlna:/minidlna
      # Storage dirs
      - /shares/P2P/complete:/storage/complete:ro
      - /shares/Public/Backup:/storage/Backup:ro
      - /shares/Perso/Photos:/storage/Photos:ro
      - /shares/Perso/Videos:/storage/Videos:ro
      - /shares/Data/MP3:/storage/MP3:ro
      - /shares/Data/Series:/storage/Series:ro
      - /shares/Data/Films:/storage/Films:ro
      #- external-hd1:/storage/_hd1:ro
    # User from docker host to impersonate in container (configured in .env file)
    user: "${USER_PUID}:${USER_PGID}"
    restart: always

  # ==========================================================================
  # Resilio
  resilio:
    image: linuxserver/resilio-sync:latest
    container_name: resilio
    dns:
      # Public DNS
      - 8.8.8.8
      - 8.8.4.4
    environment:
      # User from docker host to impersonate in container (configured in .env file)
      - PUID=${USER_PUID}
      - PGID=${USER_PGID}
    volumes:
      # Sync time with docker host
      - /etc/localtime:/etc/localtime:ro
      # Configuration dir
      - /shares/P2P/tools/resilio:/config
      # Storage dirs
      - /shares/P2P/resilio/downloads:/downloads
      - /shares/P2P/resilio/sync:/sync
    ports:
      # Resilio Web UI port
      - 8888:8888
      - 55555:55555
    restart: always
